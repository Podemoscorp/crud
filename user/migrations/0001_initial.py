# Generated by Django 3.1.6 on 2021-02-15 19:04

import datetime
from django.db import migrations, models
from django.utils.timezone import utc
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='primeiro nome')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='último nome')),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'A user with that email address already exists.'}, max_length=254, unique=True, verbose_name='endereço de email')),
                ('is_staff', models.BooleanField(default=False, help_text='Indica que usuário consegue acessar este site de administração.', verbose_name='membro da equipe')),
                ('is_active', models.BooleanField(default=True, help_text='Indica que o usuário será tratado como ativo. Ao invés de excluir contas de usuário, desmarque isso.', verbose_name='ativo')),
                ('date_joined', models.DateTimeField(default=datetime.datetime(2021, 2, 15, 19, 4, 33, 231638, tzinfo=utc), verbose_name='data de registro')),
                ('soft_delet', models.DateTimeField(blank=True, default=None, verbose_name='Deleted ?')),
                ('is_trusty', models.DateTimeField(blank=True, default=None, verbose_name='is trusty')),
                ('cpf', models.CharField(blank=True, max_length=15, verbose_name='CPF')),
                ('endereco', models.CharField(max_length=100, verbose_name='Address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuário',
                'verbose_name_plural': 'usuários',
            },
            managers=[
                ('objects', user.models.UserManager()),
            ],
        ),
    ]
